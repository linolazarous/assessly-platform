rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Organization documents - only admins can manage org settings
    match /organizations/{orgId} {
      allow read: if isSignedIn() && hasOrgAccess(orgId);
      allow write: if isSignedIn() && isOrgAdmin(orgId);
      
      // Assessments subcollection - admins and assessors can manage
      match /assessments/{assessmentId} {
        allow read: if isSignedIn() && hasOrgAccess(orgId);
        allow create, update: if isSignedIn() && isOrgAdminOrAssessor(orgId);
        allow delete: if isSignedIn() && isOrgAdmin(orgId);
        
        // Questions subcollection
        match /questions/{questionId} {
          allow read: if isSignedIn() && hasOrgAccess(orgId);
          allow write: if isSignedIn() && isOrgAdminOrAssessor(orgId);
        }
        
        // Responses subcollection
        match /responses/{responseId} {
          allow read: if isSignedIn() && 
                       (isOrgAdminOrAssessor(orgId) || 
                        isResponseOwner(responseId));
          allow create: if isSignedIn() && isCurrentUserCreating(responseId);
          allow update, delete: if false; // Responses are immutable after creation
        }
      }
      
      // Members subcollection
      match /members/{userId} {
        allow read: if isSignedIn() && hasOrgAccess(orgId);
        allow write: if isSignedIn() && isOrgAdmin(orgId);
      }
    }
    
    // Root-level assessments collection (for public/private access)
    match /assessments/{assessmentId} {
      allow read: if resource.data.organizationId == request.auth.uid ||
                   resource.data.public == true;
      allow write: if resource.data.organizationId == request.auth.uid;
    }
    
    // User profiles - users can only access their own
    match /users/{userId} {
      allow read, update: if isSignedIn() && isCurrentUser(userId);
      allow create, delete: if false;
    }
    
    // Global collections
    match /templates/{templateId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && isAdmin();
    }
    
    // ===== Helper Functions =====
    function isSignedIn() {
      return request.auth != null;
    }
    
    function hasOrgAccess(orgId) {
      return orgId in request.auth.token.orgs;
    }
    
    function isOrgAdmin(orgId) {
      return request.auth.token.orgs.get(orgId, '') == 'admin';
    }
    
    function isOrgAdminOrAssessor(orgId) {
      return request.auth.token.orgs.get(orgId, '') in ['admin', 'assessor'];
    }
    
    function isCurrentUser(userId) {
      return userId == request.auth.uid;
    }
    
    function isResponseOwner(responseId) {
      return resource.data.userId == request.auth.uid;
    }
    
    function isCurrentUserCreating(responseId) {
      return request.resource.data.userId == request.auth.uid;
    }
    
    function isAdmin() {
      return request.auth.token.admin == true;
    }
    
    function isPublicAssessment() {
      return resource.data.public == true;
    }
  }
}
